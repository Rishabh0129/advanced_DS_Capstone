{"cells":[{"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","execution_count":1,"outputs":[{"output_type":"stream","text":"/kaggle/input/factors-affecting-campus-placement/Placement_Data_Full_Class.csv\n","name":"stdout"}]},{"metadata":{"_uuid":"d629ff2d2480ee46fbb7e2d37f6b5fab8052498a","_cell_guid":"79c7e3d0-c299-4dcb-8224-4455121ee9b0","trusted":true},"cell_type":"code","source":"df=pd.read_csv(\"/kaggle/input/factors-affecting-campus-placement/Placement_Data_Full_Class.csv\")\ndf.head(30)","execution_count":3,"outputs":[{"output_type":"execute_result","execution_count":3,"data":{"text/plain":"    sl_no gender  ssc_p    ssc_b  hsc_p    hsc_b     hsc_s  degree_p  \\\n0       1      M  67.00   Others  91.00   Others  Commerce     58.00   \n1       2      M  79.33  Central  78.33   Others   Science     77.48   \n2       3      M  65.00  Central  68.00  Central      Arts     64.00   \n3       4      M  56.00  Central  52.00  Central   Science     52.00   \n4       5      M  85.80  Central  73.60  Central  Commerce     73.30   \n5       6      M  55.00   Others  49.80   Others   Science     67.25   \n6       7      F  46.00   Others  49.20   Others  Commerce     79.00   \n7       8      M  82.00  Central  64.00  Central   Science     66.00   \n8       9      M  73.00  Central  79.00  Central  Commerce     72.00   \n9      10      M  58.00  Central  70.00  Central  Commerce     61.00   \n10     11      M  58.00  Central  61.00  Central  Commerce     60.00   \n11     12      M  69.60  Central  68.40  Central  Commerce     78.30   \n12     13      F  47.00  Central  55.00   Others   Science     65.00   \n13     14      F  77.00  Central  87.00  Central  Commerce     59.00   \n14     15      M  62.00  Central  47.00  Central  Commerce     50.00   \n15     16      F  65.00  Central  75.00  Central  Commerce     69.00   \n16     17      M  63.00  Central  66.20  Central  Commerce     65.60   \n17     18      F  55.00  Central  67.00  Central  Commerce     64.00   \n18     19      F  63.00  Central  66.00  Central  Commerce     64.00   \n19     20      M  60.00   Others  67.00   Others      Arts     70.00   \n20     21      M  62.00   Others  65.00   Others  Commerce     66.00   \n21     22      F  79.00   Others  76.00   Others  Commerce     85.00   \n22     23      F  69.80   Others  60.80   Others   Science     72.23   \n23     24      F  77.40   Others  60.00   Others   Science     64.74   \n24     25      M  76.50   Others  97.70   Others   Science     78.86   \n25     26      F  52.58   Others  54.60  Central  Commerce     50.20   \n26     27      M  71.00   Others  79.00   Others  Commerce     66.00   \n27     28      M  63.00   Others  67.00   Others  Commerce     66.00   \n28     29      M  76.76   Others  76.50   Others  Commerce     67.50   \n29     30      M  62.00  Central  67.00  Central  Commerce     58.00   \n\n     degree_t workex  etest_p specialisation  mba_p      status    salary  \n0    Sci&Tech     No    55.00         Mkt&HR  58.80      Placed  270000.0  \n1    Sci&Tech    Yes    86.50        Mkt&Fin  66.28      Placed  200000.0  \n2   Comm&Mgmt     No    75.00        Mkt&Fin  57.80      Placed  250000.0  \n3    Sci&Tech     No    66.00         Mkt&HR  59.43  Not Placed       NaN  \n4   Comm&Mgmt     No    96.80        Mkt&Fin  55.50      Placed  425000.0  \n5    Sci&Tech    Yes    55.00        Mkt&Fin  51.58  Not Placed       NaN  \n6   Comm&Mgmt     No    74.28        Mkt&Fin  53.29  Not Placed       NaN  \n7    Sci&Tech    Yes    67.00        Mkt&Fin  62.14      Placed  252000.0  \n8   Comm&Mgmt     No    91.34        Mkt&Fin  61.29      Placed  231000.0  \n9   Comm&Mgmt     No    54.00        Mkt&Fin  52.21  Not Placed       NaN  \n10  Comm&Mgmt    Yes    62.00         Mkt&HR  60.85      Placed  260000.0  \n11  Comm&Mgmt    Yes    60.00        Mkt&Fin  63.70      Placed  250000.0  \n12  Comm&Mgmt     No    62.00         Mkt&HR  65.04  Not Placed       NaN  \n13  Comm&Mgmt     No    68.00        Mkt&Fin  68.63      Placed  218000.0  \n14  Comm&Mgmt     No    76.00         Mkt&HR  54.96  Not Placed       NaN  \n15  Comm&Mgmt    Yes    72.00        Mkt&Fin  64.66      Placed  200000.0  \n16  Comm&Mgmt    Yes    60.00        Mkt&Fin  62.54      Placed  300000.0  \n17  Comm&Mgmt     No    60.00        Mkt&Fin  67.28  Not Placed       NaN  \n18  Comm&Mgmt     No    68.00         Mkt&HR  64.08  Not Placed       NaN  \n19  Comm&Mgmt    Yes    50.48        Mkt&Fin  77.89      Placed  236000.0  \n20  Comm&Mgmt     No    50.00         Mkt&HR  56.70      Placed  265000.0  \n21  Comm&Mgmt     No    95.00        Mkt&Fin  69.06      Placed  393000.0  \n22   Sci&Tech     No    55.53         Mkt&HR  68.81      Placed  360000.0  \n23   Sci&Tech    Yes    92.00        Mkt&Fin  63.62      Placed  300000.0  \n24   Sci&Tech     No    97.40        Mkt&Fin  74.01      Placed  360000.0  \n25  Comm&Mgmt    Yes    76.00        Mkt&Fin  65.33  Not Placed       NaN  \n26  Comm&Mgmt    Yes    94.00        Mkt&Fin  57.55      Placed  240000.0  \n27  Comm&Mgmt     No    68.00         Mkt&HR  57.69      Placed  265000.0  \n28  Comm&Mgmt    Yes    73.35        Mkt&Fin  64.15      Placed  350000.0  \n29  Comm&Mgmt     No    77.00        Mkt&Fin  51.29  Not Placed       NaN  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl_no</th>\n      <th>gender</th>\n      <th>ssc_p</th>\n      <th>ssc_b</th>\n      <th>hsc_p</th>\n      <th>hsc_b</th>\n      <th>hsc_s</th>\n      <th>degree_p</th>\n      <th>degree_t</th>\n      <th>workex</th>\n      <th>etest_p</th>\n      <th>specialisation</th>\n      <th>mba_p</th>\n      <th>status</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>M</td>\n      <td>67.00</td>\n      <td>Others</td>\n      <td>91.00</td>\n      <td>Others</td>\n      <td>Commerce</td>\n      <td>58.00</td>\n      <td>Sci&amp;Tech</td>\n      <td>No</td>\n      <td>55.00</td>\n      <td>Mkt&amp;HR</td>\n      <td>58.80</td>\n      <td>Placed</td>\n      <td>270000.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>M</td>\n      <td>79.33</td>\n      <td>Central</td>\n      <td>78.33</td>\n      <td>Others</td>\n      <td>Science</td>\n      <td>77.48</td>\n      <td>Sci&amp;Tech</td>\n      <td>Yes</td>\n      <td>86.50</td>\n      <td>Mkt&amp;Fin</td>\n      <td>66.28</td>\n      <td>Placed</td>\n      <td>200000.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>M</td>\n      <td>65.00</td>\n      <td>Central</td>\n      <td>68.00</td>\n      <td>Central</td>\n      <td>Arts</td>\n      <td>64.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>75.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>57.80</td>\n      <td>Placed</td>\n      <td>250000.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>M</td>\n      <td>56.00</td>\n      <td>Central</td>\n      <td>52.00</td>\n      <td>Central</td>\n      <td>Science</td>\n      <td>52.00</td>\n      <td>Sci&amp;Tech</td>\n      <td>No</td>\n      <td>66.00</td>\n      <td>Mkt&amp;HR</td>\n      <td>59.43</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>M</td>\n      <td>85.80</td>\n      <td>Central</td>\n      <td>73.60</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>73.30</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>96.80</td>\n      <td>Mkt&amp;Fin</td>\n      <td>55.50</td>\n      <td>Placed</td>\n      <td>425000.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6</td>\n      <td>M</td>\n      <td>55.00</td>\n      <td>Others</td>\n      <td>49.80</td>\n      <td>Others</td>\n      <td>Science</td>\n      <td>67.25</td>\n      <td>Sci&amp;Tech</td>\n      <td>Yes</td>\n      <td>55.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>51.58</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7</td>\n      <td>F</td>\n      <td>46.00</td>\n      <td>Others</td>\n      <td>49.20</td>\n      <td>Others</td>\n      <td>Commerce</td>\n      <td>79.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>74.28</td>\n      <td>Mkt&amp;Fin</td>\n      <td>53.29</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>8</td>\n      <td>M</td>\n      <td>82.00</td>\n      <td>Central</td>\n      <td>64.00</td>\n      <td>Central</td>\n      <td>Science</td>\n      <td>66.00</td>\n      <td>Sci&amp;Tech</td>\n      <td>Yes</td>\n      <td>67.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>62.14</td>\n      <td>Placed</td>\n      <td>252000.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>9</td>\n      <td>M</td>\n      <td>73.00</td>\n      <td>Central</td>\n      <td>79.00</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>72.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>91.34</td>\n      <td>Mkt&amp;Fin</td>\n      <td>61.29</td>\n      <td>Placed</td>\n      <td>231000.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>10</td>\n      <td>M</td>\n      <td>58.00</td>\n      <td>Central</td>\n      <td>70.00</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>61.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>54.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>52.21</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>11</td>\n      <td>M</td>\n      <td>58.00</td>\n      <td>Central</td>\n      <td>61.00</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>60.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>Yes</td>\n      <td>62.00</td>\n      <td>Mkt&amp;HR</td>\n      <td>60.85</td>\n      <td>Placed</td>\n      <td>260000.0</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>12</td>\n      <td>M</td>\n      <td>69.60</td>\n      <td>Central</td>\n      <td>68.40</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>78.30</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>Yes</td>\n      <td>60.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>63.70</td>\n      <td>Placed</td>\n      <td>250000.0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>13</td>\n      <td>F</td>\n      <td>47.00</td>\n      <td>Central</td>\n      <td>55.00</td>\n      <td>Others</td>\n      <td>Science</td>\n      <td>65.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>62.00</td>\n      <td>Mkt&amp;HR</td>\n      <td>65.04</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>14</td>\n      <td>F</td>\n      <td>77.00</td>\n      <td>Central</td>\n      <td>87.00</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>59.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>68.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>68.63</td>\n      <td>Placed</td>\n      <td>218000.0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>15</td>\n      <td>M</td>\n      <td>62.00</td>\n      <td>Central</td>\n      <td>47.00</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>50.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>76.00</td>\n      <td>Mkt&amp;HR</td>\n      <td>54.96</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>16</td>\n      <td>F</td>\n      <td>65.00</td>\n      <td>Central</td>\n      <td>75.00</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>69.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>Yes</td>\n      <td>72.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>64.66</td>\n      <td>Placed</td>\n      <td>200000.0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>17</td>\n      <td>M</td>\n      <td>63.00</td>\n      <td>Central</td>\n      <td>66.20</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>65.60</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>Yes</td>\n      <td>60.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>62.54</td>\n      <td>Placed</td>\n      <td>300000.0</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>18</td>\n      <td>F</td>\n      <td>55.00</td>\n      <td>Central</td>\n      <td>67.00</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>64.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>60.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>67.28</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>19</td>\n      <td>F</td>\n      <td>63.00</td>\n      <td>Central</td>\n      <td>66.00</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>64.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>68.00</td>\n      <td>Mkt&amp;HR</td>\n      <td>64.08</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>20</td>\n      <td>M</td>\n      <td>60.00</td>\n      <td>Others</td>\n      <td>67.00</td>\n      <td>Others</td>\n      <td>Arts</td>\n      <td>70.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>Yes</td>\n      <td>50.48</td>\n      <td>Mkt&amp;Fin</td>\n      <td>77.89</td>\n      <td>Placed</td>\n      <td>236000.0</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>21</td>\n      <td>M</td>\n      <td>62.00</td>\n      <td>Others</td>\n      <td>65.00</td>\n      <td>Others</td>\n      <td>Commerce</td>\n      <td>66.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>50.00</td>\n      <td>Mkt&amp;HR</td>\n      <td>56.70</td>\n      <td>Placed</td>\n      <td>265000.0</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>22</td>\n      <td>F</td>\n      <td>79.00</td>\n      <td>Others</td>\n      <td>76.00</td>\n      <td>Others</td>\n      <td>Commerce</td>\n      <td>85.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>95.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>69.06</td>\n      <td>Placed</td>\n      <td>393000.0</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>23</td>\n      <td>F</td>\n      <td>69.80</td>\n      <td>Others</td>\n      <td>60.80</td>\n      <td>Others</td>\n      <td>Science</td>\n      <td>72.23</td>\n      <td>Sci&amp;Tech</td>\n      <td>No</td>\n      <td>55.53</td>\n      <td>Mkt&amp;HR</td>\n      <td>68.81</td>\n      <td>Placed</td>\n      <td>360000.0</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>24</td>\n      <td>F</td>\n      <td>77.40</td>\n      <td>Others</td>\n      <td>60.00</td>\n      <td>Others</td>\n      <td>Science</td>\n      <td>64.74</td>\n      <td>Sci&amp;Tech</td>\n      <td>Yes</td>\n      <td>92.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>63.62</td>\n      <td>Placed</td>\n      <td>300000.0</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>25</td>\n      <td>M</td>\n      <td>76.50</td>\n      <td>Others</td>\n      <td>97.70</td>\n      <td>Others</td>\n      <td>Science</td>\n      <td>78.86</td>\n      <td>Sci&amp;Tech</td>\n      <td>No</td>\n      <td>97.40</td>\n      <td>Mkt&amp;Fin</td>\n      <td>74.01</td>\n      <td>Placed</td>\n      <td>360000.0</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>26</td>\n      <td>F</td>\n      <td>52.58</td>\n      <td>Others</td>\n      <td>54.60</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>50.20</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>Yes</td>\n      <td>76.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>65.33</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>27</td>\n      <td>M</td>\n      <td>71.00</td>\n      <td>Others</td>\n      <td>79.00</td>\n      <td>Others</td>\n      <td>Commerce</td>\n      <td>66.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>Yes</td>\n      <td>94.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>57.55</td>\n      <td>Placed</td>\n      <td>240000.0</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>28</td>\n      <td>M</td>\n      <td>63.00</td>\n      <td>Others</td>\n      <td>67.00</td>\n      <td>Others</td>\n      <td>Commerce</td>\n      <td>66.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>68.00</td>\n      <td>Mkt&amp;HR</td>\n      <td>57.69</td>\n      <td>Placed</td>\n      <td>265000.0</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>29</td>\n      <td>M</td>\n      <td>76.76</td>\n      <td>Others</td>\n      <td>76.50</td>\n      <td>Others</td>\n      <td>Commerce</td>\n      <td>67.50</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>Yes</td>\n      <td>73.35</td>\n      <td>Mkt&amp;Fin</td>\n      <td>64.15</td>\n      <td>Placed</td>\n      <td>350000.0</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>30</td>\n      <td>M</td>\n      <td>62.00</td>\n      <td>Central</td>\n      <td>67.00</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>58.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>77.00</td>\n      <td>Mkt&amp;Fin</td>\n      <td>51.29</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{},"cell_type":"markdown","source":"Lets check if there is any missing values other than in not placed students"},{"metadata":{"trusted":true},"cell_type":"code","source":"df.shape","execution_count":28,"outputs":[{"output_type":"execute_result","execution_count":28,"data":{"text/plain":"(215, 15)"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"df.isnull().sum()","execution_count":4,"outputs":[{"output_type":"execute_result","execution_count":4,"data":{"text/plain":"sl_no              0\ngender             0\nssc_p              0\nssc_b              0\nhsc_p              0\nhsc_b              0\nhsc_s              0\ndegree_p           0\ndegree_t           0\nworkex             0\netest_p            0\nspecialisation     0\nmba_p              0\nstatus             0\nsalary            67\ndtype: int64"},"metadata":{}}]},{"metadata":{},"cell_type":"markdown","source":"### As we can see that there is no missing values other than salaries. Thats good."},{"metadata":{},"cell_type":"markdown","source":"checking for placed vs not placed students"},{"metadata":{"trusted":true},"cell_type":"code","source":"df[\"status\"].value_counts()","execution_count":5,"outputs":[{"output_type":"execute_result","execution_count":5,"data":{"text/plain":"Placed        148\nNot Placed     67\nName: status, dtype: int64"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"df.dtypes","execution_count":7,"outputs":[{"output_type":"execute_result","execution_count":7,"data":{"text/plain":"sl_no               int64\ngender             object\nssc_p             float64\nssc_b              object\nhsc_p             float64\nhsc_b              object\nhsc_s              object\ndegree_p          float64\ndegree_t           object\nworkex             object\netest_p           float64\nspecialisation     object\nmba_p             float64\nstatus             object\nsalary            float64\ndtype: object"},"metadata":{}}]},{"metadata":{},"cell_type":"markdown","source":"All the datasets are having related data types so we can go further"},{"metadata":{"trusted":true},"cell_type":"code","source":"# relationship between status and percentage in secondary education\ndf[['status','ssc_p']].corr()","execution_count":14,"outputs":[{"output_type":"execute_result","execution_count":14,"data":{"text/plain":"       ssc_p\nssc_p    1.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ssc_p</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>ssc_p</th>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"# relationship between status and percentage in secondary education\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nax=sns.regplot(x=\"status\",y=\"ssc_p\",data=df)\nax","execution_count":11,"outputs":[{"output_type":"error","ename":"UFuncTypeError","evalue":"ufunc 'multiply' did not contain a loop with signature matching types (dtype('<U32'), dtype('<U32')) -> dtype('<U32')","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mUFuncTypeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-4d505082a040>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mget_ipython\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun_line_magic\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'matplotlib'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'inline'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0max\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mregplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"status\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"ssc_p\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/opt/conda/lib/python3.7/site-packages/seaborn/regression.py\u001b[0m in \u001b[0;36mregplot\u001b[0;34m(x, y, data, x_estimator, x_bins, x_ci, scatter, fit_reg, ci, n_boot, units, seed, order, logistic, lowess, robust, logx, x_partial, y_partial, truncate, dropna, x_jitter, y_jitter, label, color, marker, scatter_kws, line_kws, ax)\u001b[0m\n\u001b[1;32m    816\u001b[0m     \u001b[0mscatter_kws\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"marker\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmarker\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    817\u001b[0m     \u001b[0mline_kws\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mline_kws\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline_kws\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 818\u001b[0;31m     \u001b[0mplotter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscatter_kws\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mline_kws\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    819\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    820\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/opt/conda/lib/python3.7/site-packages/seaborn/regression.py\u001b[0m in \u001b[0;36mplot\u001b[0;34m(self, ax, scatter_kws, line_kws)\u001b[0m\n\u001b[1;32m    363\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    364\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_reg\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 365\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlineplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mline_kws\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    366\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    367\u001b[0m         \u001b[0;31m# Label the axes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/opt/conda/lib/python3.7/site-packages/seaborn/regression.py\u001b[0m in \u001b[0;36mlineplot\u001b[0;34m(self, ax, kws)\u001b[0m\n\u001b[1;32m    406\u001b[0m         \u001b[0;34m\"\"\"Draw the model.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    407\u001b[0m         \u001b[0;31m# Fit the regression model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 408\u001b[0;31m         \u001b[0mgrid\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0myhat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merr_bands\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_regression\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    409\u001b[0m         \u001b[0medges\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgrid\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgrid\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    410\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/opt/conda/lib/python3.7/site-packages/seaborn/regression.py\u001b[0m in \u001b[0;36mfit_regression\u001b[0;34m(self, ax, x_range, grid)\u001b[0m\n\u001b[1;32m    194\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    195\u001b[0m                     \u001b[0mx_min\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_xlim\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 196\u001b[0;31m             \u001b[0mgrid\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlinspace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_min\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    197\u001b[0m         \u001b[0mci\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mci\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    198\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36mlinspace\u001b[0;34m(*args, **kwargs)\u001b[0m\n","\u001b[0;32m/opt/conda/lib/python3.7/site-packages/numpy/core/function_base.py\u001b[0m in \u001b[0;36mlinspace\u001b[0;34m(start, stop, num, endpoint, retstep, dtype, axis)\u001b[0m\n\u001b[1;32m    127\u001b[0m     \u001b[0;31m# Convert float/complex array scalars to float, gh-3504\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    128\u001b[0m     \u001b[0;31m# and make sure one can use variables that have an __array_interface__, gh-6634\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 129\u001b[0;31m     \u001b[0mstart\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0masanyarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstart\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m1.0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    130\u001b[0m     \u001b[0mstop\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0masanyarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstop\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;34m*\u001b[0m \u001b[0;36m1.0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    131\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mUFuncTypeError\u001b[0m: ufunc 'multiply' did not contain a loop with signature matching types (dtype('<U32'), dtype('<U32')) -> dtype('<U32')"]},{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"metadata":{},"cell_type":"markdown","source":"We can see that the percentage of the students in ssc matters as the students with low percentages are getting less placed "},{"metadata":{},"cell_type":"markdown","source":"Now checking if the students with high secondary percentage and status"},{"metadata":{"trusted":true},"cell_type":"code","source":"df[[\"status\",\"hsc_p\"]].corr()","execution_count":12,"outputs":[{"output_type":"execute_result","execution_count":12,"data":{"text/plain":"       hsc_p\nhsc_p    1.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hsc_p</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>hsc_p</th>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{},"cell_type":"markdown","source":"This shows that hsc percentage matters a lot for the placement"},{"metadata":{"trusted":true},"cell_type":"code","source":"sns.regplot(x=\"status\",y=\"hsc_p\",data=df)","execution_count":13,"outputs":[{"output_type":"error","ename":"UFuncTypeError","evalue":"ufunc 'multiply' did not contain a loop with signature matching types (dtype('<U32'), dtype('<U32')) -> dtype('<U32')","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mUFuncTypeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-4879b09cfa44>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mregplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"status\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"hsc_p\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/opt/conda/lib/python3.7/site-packages/seaborn/regression.py\u001b[0m in \u001b[0;36mregplot\u001b[0;34m(x, y, data, x_estimator, x_bins, x_ci, scatter, fit_reg, ci, n_boot, units, seed, order, logistic, lowess, robust, logx, x_partial, y_partial, truncate, dropna, x_jitter, y_jitter, label, color, marker, scatter_kws, line_kws, ax)\u001b[0m\n\u001b[1;32m    816\u001b[0m     \u001b[0mscatter_kws\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"marker\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmarker\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    817\u001b[0m     \u001b[0mline_kws\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mline_kws\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline_kws\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 818\u001b[0;31m     \u001b[0mplotter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscatter_kws\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mline_kws\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    819\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    820\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/opt/conda/lib/python3.7/site-packages/seaborn/regression.py\u001b[0m in \u001b[0;36mplot\u001b[0;34m(self, ax, scatter_kws, line_kws)\u001b[0m\n\u001b[1;32m    363\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    364\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_reg\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 365\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlineplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mline_kws\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    366\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    367\u001b[0m         \u001b[0;31m# Label the axes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/opt/conda/lib/python3.7/site-packages/seaborn/regression.py\u001b[0m in \u001b[0;36mlineplot\u001b[0;34m(self, ax, kws)\u001b[0m\n\u001b[1;32m    406\u001b[0m         \u001b[0;34m\"\"\"Draw the model.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    407\u001b[0m         \u001b[0;31m# Fit the regression model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 408\u001b[0;31m         \u001b[0mgrid\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0myhat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merr_bands\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_regression\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    409\u001b[0m         \u001b[0medges\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgrid\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgrid\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    410\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/opt/conda/lib/python3.7/site-packages/seaborn/regression.py\u001b[0m in \u001b[0;36mfit_regression\u001b[0;34m(self, ax, x_range, grid)\u001b[0m\n\u001b[1;32m    194\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    195\u001b[0m                     \u001b[0mx_min\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_max\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_xlim\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 196\u001b[0;31m             \u001b[0mgrid\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlinspace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_min\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    197\u001b[0m         \u001b[0mci\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mci\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    198\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36mlinspace\u001b[0;34m(*args, **kwargs)\u001b[0m\n","\u001b[0;32m/opt/conda/lib/python3.7/site-packages/numpy/core/function_base.py\u001b[0m in \u001b[0;36mlinspace\u001b[0;34m(start, stop, num, endpoint, retstep, dtype, axis)\u001b[0m\n\u001b[1;32m    127\u001b[0m     \u001b[0;31m# Convert float/complex array scalars to float, gh-3504\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    128\u001b[0m     \u001b[0;31m# and make sure one can use variables that have an __array_interface__, gh-6634\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 129\u001b[0;31m     \u001b[0mstart\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0masanyarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstart\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m1.0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    130\u001b[0m     \u001b[0mstop\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0masanyarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstop\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;34m*\u001b[0m \u001b[0;36m1.0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    131\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mUFuncTypeError\u001b[0m: ufunc 'multiply' did not contain a loop with signature matching types (dtype('<U32'), dtype('<U32')) -> dtype('<U32')"]},{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"metadata":{},"cell_type":"markdown","source":"Lets see any other factors that matter for the placement"},{"metadata":{"trusted":true},"cell_type":"code","source":"df.head()","execution_count":15,"outputs":[{"output_type":"execute_result","execution_count":15,"data":{"text/plain":"   sl_no gender  ssc_p    ssc_b  hsc_p    hsc_b     hsc_s  degree_p  \\\n0      1      M  67.00   Others  91.00   Others  Commerce     58.00   \n1      2      M  79.33  Central  78.33   Others   Science     77.48   \n2      3      M  65.00  Central  68.00  Central      Arts     64.00   \n3      4      M  56.00  Central  52.00  Central   Science     52.00   \n4      5      M  85.80  Central  73.60  Central  Commerce     73.30   \n\n    degree_t workex  etest_p specialisation  mba_p      status    salary  \n0   Sci&Tech     No     55.0         Mkt&HR  58.80      Placed  270000.0  \n1   Sci&Tech    Yes     86.5        Mkt&Fin  66.28      Placed  200000.0  \n2  Comm&Mgmt     No     75.0        Mkt&Fin  57.80      Placed  250000.0  \n3   Sci&Tech     No     66.0         Mkt&HR  59.43  Not Placed       NaN  \n4  Comm&Mgmt     No     96.8        Mkt&Fin  55.50      Placed  425000.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl_no</th>\n      <th>gender</th>\n      <th>ssc_p</th>\n      <th>ssc_b</th>\n      <th>hsc_p</th>\n      <th>hsc_b</th>\n      <th>hsc_s</th>\n      <th>degree_p</th>\n      <th>degree_t</th>\n      <th>workex</th>\n      <th>etest_p</th>\n      <th>specialisation</th>\n      <th>mba_p</th>\n      <th>status</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>M</td>\n      <td>67.00</td>\n      <td>Others</td>\n      <td>91.00</td>\n      <td>Others</td>\n      <td>Commerce</td>\n      <td>58.00</td>\n      <td>Sci&amp;Tech</td>\n      <td>No</td>\n      <td>55.0</td>\n      <td>Mkt&amp;HR</td>\n      <td>58.80</td>\n      <td>Placed</td>\n      <td>270000.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>M</td>\n      <td>79.33</td>\n      <td>Central</td>\n      <td>78.33</td>\n      <td>Others</td>\n      <td>Science</td>\n      <td>77.48</td>\n      <td>Sci&amp;Tech</td>\n      <td>Yes</td>\n      <td>86.5</td>\n      <td>Mkt&amp;Fin</td>\n      <td>66.28</td>\n      <td>Placed</td>\n      <td>200000.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>M</td>\n      <td>65.00</td>\n      <td>Central</td>\n      <td>68.00</td>\n      <td>Central</td>\n      <td>Arts</td>\n      <td>64.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>75.0</td>\n      <td>Mkt&amp;Fin</td>\n      <td>57.80</td>\n      <td>Placed</td>\n      <td>250000.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>M</td>\n      <td>56.00</td>\n      <td>Central</td>\n      <td>52.00</td>\n      <td>Central</td>\n      <td>Science</td>\n      <td>52.00</td>\n      <td>Sci&amp;Tech</td>\n      <td>No</td>\n      <td>66.0</td>\n      <td>Mkt&amp;HR</td>\n      <td>59.43</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>M</td>\n      <td>85.80</td>\n      <td>Central</td>\n      <td>73.60</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>73.30</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>96.8</td>\n      <td>Mkt&amp;Fin</td>\n      <td>55.50</td>\n      <td>Placed</td>\n      <td>425000.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"df['gender'] = [1 if x =='F' else 0 for x in df['gender']]","execution_count":18,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"df.head()","execution_count":19,"outputs":[{"output_type":"execute_result","execution_count":19,"data":{"text/plain":"   sl_no  gender  ssc_p    ssc_b  hsc_p    hsc_b     hsc_s  degree_p  \\\n0      1       0  67.00   Others  91.00   Others  Commerce     58.00   \n1      2       0  79.33  Central  78.33   Others   Science     77.48   \n2      3       0  65.00  Central  68.00  Central      Arts     64.00   \n3      4       0  56.00  Central  52.00  Central   Science     52.00   \n4      5       0  85.80  Central  73.60  Central  Commerce     73.30   \n\n    degree_t workex  etest_p specialisation  mba_p      status    salary  \n0   Sci&Tech     No     55.0         Mkt&HR  58.80      Placed  270000.0  \n1   Sci&Tech    Yes     86.5        Mkt&Fin  66.28      Placed  200000.0  \n2  Comm&Mgmt     No     75.0        Mkt&Fin  57.80      Placed  250000.0  \n3   Sci&Tech     No     66.0         Mkt&HR  59.43  Not Placed       NaN  \n4  Comm&Mgmt     No     96.8        Mkt&Fin  55.50      Placed  425000.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl_no</th>\n      <th>gender</th>\n      <th>ssc_p</th>\n      <th>ssc_b</th>\n      <th>hsc_p</th>\n      <th>hsc_b</th>\n      <th>hsc_s</th>\n      <th>degree_p</th>\n      <th>degree_t</th>\n      <th>workex</th>\n      <th>etest_p</th>\n      <th>specialisation</th>\n      <th>mba_p</th>\n      <th>status</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>67.00</td>\n      <td>Others</td>\n      <td>91.00</td>\n      <td>Others</td>\n      <td>Commerce</td>\n      <td>58.00</td>\n      <td>Sci&amp;Tech</td>\n      <td>No</td>\n      <td>55.0</td>\n      <td>Mkt&amp;HR</td>\n      <td>58.80</td>\n      <td>Placed</td>\n      <td>270000.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>0</td>\n      <td>79.33</td>\n      <td>Central</td>\n      <td>78.33</td>\n      <td>Others</td>\n      <td>Science</td>\n      <td>77.48</td>\n      <td>Sci&amp;Tech</td>\n      <td>Yes</td>\n      <td>86.5</td>\n      <td>Mkt&amp;Fin</td>\n      <td>66.28</td>\n      <td>Placed</td>\n      <td>200000.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>0</td>\n      <td>65.00</td>\n      <td>Central</td>\n      <td>68.00</td>\n      <td>Central</td>\n      <td>Arts</td>\n      <td>64.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>75.0</td>\n      <td>Mkt&amp;Fin</td>\n      <td>57.80</td>\n      <td>Placed</td>\n      <td>250000.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>0</td>\n      <td>56.00</td>\n      <td>Central</td>\n      <td>52.00</td>\n      <td>Central</td>\n      <td>Science</td>\n      <td>52.00</td>\n      <td>Sci&amp;Tech</td>\n      <td>No</td>\n      <td>66.0</td>\n      <td>Mkt&amp;HR</td>\n      <td>59.43</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>85.80</td>\n      <td>Central</td>\n      <td>73.60</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>73.30</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>96.8</td>\n      <td>Mkt&amp;Fin</td>\n      <td>55.50</td>\n      <td>Placed</td>\n      <td>425000.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"df['degree_t'].describe()","execution_count":26,"outputs":[{"output_type":"execute_result","execution_count":26,"data":{"text/plain":"count           215\nunique            3\ntop       Comm&Mgmt\nfreq            145\nName: degree_t, dtype: object"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"df[\"specialisation\"].describe()","execution_count":29,"outputs":[{"output_type":"execute_result","execution_count":29,"data":{"text/plain":"count         215\nunique          2\ntop       Mkt&Fin\nfreq          120\nName: specialisation, dtype: object"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"df.describe(include='all')","execution_count":30,"outputs":[{"output_type":"execute_result","execution_count":30,"data":{"text/plain":"             sl_no      gender       ssc_p    ssc_b       hsc_p   hsc_b  \\\ncount   215.000000  215.000000  215.000000      215  215.000000     215   \nunique         NaN         NaN         NaN        2         NaN       2   \ntop            NaN         NaN         NaN  Central         NaN  Others   \nfreq           NaN         NaN         NaN      116         NaN     131   \nmean    108.000000    0.353488   67.303395      NaN   66.333163     NaN   \nstd      62.209324    0.479168   10.827205      NaN   10.897509     NaN   \nmin       1.000000    0.000000   40.890000      NaN   37.000000     NaN   \n25%      54.500000    0.000000   60.600000      NaN   60.900000     NaN   \n50%     108.000000    0.000000   67.000000      NaN   65.000000     NaN   \n75%     161.500000    1.000000   75.700000      NaN   73.000000     NaN   \nmax     215.000000    1.000000   89.400000      NaN   97.700000     NaN   \n\n           hsc_s    degree_p   degree_t workex     etest_p specialisation  \\\ncount        215  215.000000        215    215  215.000000            215   \nunique         3         NaN          3      2         NaN              2   \ntop     Commerce         NaN  Comm&Mgmt     No         NaN        Mkt&Fin   \nfreq         113         NaN        145    141         NaN            120   \nmean         NaN   66.370186        NaN    NaN   72.100558            NaN   \nstd          NaN    7.358743        NaN    NaN   13.275956            NaN   \nmin          NaN   50.000000        NaN    NaN   50.000000            NaN   \n25%          NaN   61.000000        NaN    NaN   60.000000            NaN   \n50%          NaN   66.000000        NaN    NaN   71.000000            NaN   \n75%          NaN   72.000000        NaN    NaN   83.500000            NaN   \nmax          NaN   91.000000        NaN    NaN   98.000000            NaN   \n\n             mba_p  status         salary  \ncount   215.000000     215     148.000000  \nunique         NaN       2            NaN  \ntop            NaN  Placed            NaN  \nfreq           NaN     148            NaN  \nmean     62.278186     NaN  288655.405405  \nstd       5.833385     NaN   93457.452420  \nmin      51.210000     NaN  200000.000000  \n25%      57.945000     NaN  240000.000000  \n50%      62.000000     NaN  265000.000000  \n75%      66.255000     NaN  300000.000000  \nmax      77.890000     NaN  940000.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl_no</th>\n      <th>gender</th>\n      <th>ssc_p</th>\n      <th>ssc_b</th>\n      <th>hsc_p</th>\n      <th>hsc_b</th>\n      <th>hsc_s</th>\n      <th>degree_p</th>\n      <th>degree_t</th>\n      <th>workex</th>\n      <th>etest_p</th>\n      <th>specialisation</th>\n      <th>mba_p</th>\n      <th>status</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>215.000000</td>\n      <td>215.000000</td>\n      <td>215.000000</td>\n      <td>215</td>\n      <td>215.000000</td>\n      <td>215</td>\n      <td>215</td>\n      <td>215.000000</td>\n      <td>215</td>\n      <td>215</td>\n      <td>215.000000</td>\n      <td>215</td>\n      <td>215.000000</td>\n      <td>215</td>\n      <td>148.000000</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>3</td>\n      <td>NaN</td>\n      <td>3</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Central</td>\n      <td>NaN</td>\n      <td>Others</td>\n      <td>Commerce</td>\n      <td>NaN</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>NaN</td>\n      <td>Mkt&amp;Fin</td>\n      <td>NaN</td>\n      <td>Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>116</td>\n      <td>NaN</td>\n      <td>131</td>\n      <td>113</td>\n      <td>NaN</td>\n      <td>145</td>\n      <td>141</td>\n      <td>NaN</td>\n      <td>120</td>\n      <td>NaN</td>\n      <td>148</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>108.000000</td>\n      <td>0.353488</td>\n      <td>67.303395</td>\n      <td>NaN</td>\n      <td>66.333163</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>66.370186</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>72.100558</td>\n      <td>NaN</td>\n      <td>62.278186</td>\n      <td>NaN</td>\n      <td>288655.405405</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>62.209324</td>\n      <td>0.479168</td>\n      <td>10.827205</td>\n      <td>NaN</td>\n      <td>10.897509</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>7.358743</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13.275956</td>\n      <td>NaN</td>\n      <td>5.833385</td>\n      <td>NaN</td>\n      <td>93457.452420</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>40.890000</td>\n      <td>NaN</td>\n      <td>37.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>50.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>50.000000</td>\n      <td>NaN</td>\n      <td>51.210000</td>\n      <td>NaN</td>\n      <td>200000.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>54.500000</td>\n      <td>0.000000</td>\n      <td>60.600000</td>\n      <td>NaN</td>\n      <td>60.900000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>61.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>60.000000</td>\n      <td>NaN</td>\n      <td>57.945000</td>\n      <td>NaN</td>\n      <td>240000.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>108.000000</td>\n      <td>0.000000</td>\n      <td>67.000000</td>\n      <td>NaN</td>\n      <td>65.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>66.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>71.000000</td>\n      <td>NaN</td>\n      <td>62.000000</td>\n      <td>NaN</td>\n      <td>265000.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>161.500000</td>\n      <td>1.000000</td>\n      <td>75.700000</td>\n      <td>NaN</td>\n      <td>73.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>72.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>83.500000</td>\n      <td>NaN</td>\n      <td>66.255000</td>\n      <td>NaN</td>\n      <td>300000.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>215.000000</td>\n      <td>1.000000</td>\n      <td>89.400000</td>\n      <td>NaN</td>\n      <td>97.700000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>91.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>98.000000</td>\n      <td>NaN</td>\n      <td>77.890000</td>\n      <td>NaN</td>\n      <td>940000.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"df['status'] = [1 if x =='Placed' else 0 for x in df['status']]","execution_count":33,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression()\nx=df[['degree_p']]\ny=df[['status']]\nlr.fit(x,y)","execution_count":34,"outputs":[{"output_type":"execute_result","execution_count":34,"data":{"text/plain":"LinearRegression()"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"b0=lr.intercept_\nb1=lr.coef_\nprint(b0,b1)","execution_count":36,"outputs":[{"output_type":"stream","text":"[-1.3208455] [[0.03027289]]\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"print(f\"the relationship between degree pecentage and employment status can be defined as {b0}+{b1}x\")","execution_count":37,"outputs":[{"output_type":"stream","text":"the relationship between degree pecentage and employment status can be defined as [-1.3208455]+[[0.03027289]]x\n","name":"stdout"}]},{"metadata":{},"cell_type":"markdown","source":"here x is percentage in degree"},{"metadata":{"trusted":true},"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nx=df['status']\ny=df.drop('status',axis=1).drop('salary',axis=1)\nx_train,y_train,x_test,y_test=train_test_split(x,y,test_size=0.3,random_state=0)","execution_count":42,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"from sklearn.metrics import accuracy_score,f1_score,confusion_matrix","execution_count":43,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"plt.figure(figsize=(5,7))\nsns.countplot(x=df['status'])\nplt.savefig('status.png')\nplt.show()","execution_count":50,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 360x504 with 1 Axes>","image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.7.6","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat":4,"nbformat_minor":4}
